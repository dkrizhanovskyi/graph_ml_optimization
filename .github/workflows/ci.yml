name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        export PYTHONPATH=.
        python -m unittest discover tests

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build Docker image
      run: |
        docker build -t dkrizhanovskyi/graph_ml_optimization:latest .

    - name: Push Docker image
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        docker push dkrizhanovskyi/graph_ml_optimization:latest

  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: SSH to Server and Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          docker pull dkrizhanovskyi/graph_ml_optimization:latest
          docker stop graph_ml_optimization || true
          docker rm graph_ml_optimization || true
          docker run -d --name graph_ml_optimization -p 80:5000 dkrizhanovskyi/graph_ml_optimization:latest
