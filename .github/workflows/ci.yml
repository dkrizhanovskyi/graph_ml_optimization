name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup:
    name: Setup Python Environment
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

  generate_data:
    name: Generate Test Data
    runs-on: ubuntu-latest
    needs: setup

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Generate necessary graph files if generate_graphs.py exists
      run: |
        if test -f "src/generate_graphs.py"; then
          mkdir -p data/processed/social_networks
          python src/generate_graphs.py
        else
          echo "generate_graphs.py not found, skipping graph generation"
        fi
      env:
        PYTHONPATH: .

  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    needs: setup

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies for linting
      run: |
        python -m pip install --upgrade pip
        pip install flake8

    - name: Run flake8
      run: |
        flake8 src tests || echo "Lint warnings/errors found, please review and fix them."

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: [setup, generate_data]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Run tests with coverage
      run: |
        export PYTHONPATH=.
        coverage run -m unittest discover tests || echo "Tests failed, please review the test output."
        coverage report -m
        coverage xml
      env:
        PYTHONPATH: .

  security:
    name: Security Check
    runs-on: ubuntu-latest
    needs: setup

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies for security checks
      run: |
        python -m pip install --upgrade pip
        pip install bandit

    - name: Run Bandit for security checks
      run: |
        bandit -r src || echo "Security issues found, please review the Bandit output."
